 今日任务 

● 454.四数相加II 
class Solution:
    def fourSumCount(self, nums1: List[int], nums2: List[int], nums3: List[int], nums4: List[int]) -> int:
        hashmap = dict()
        for n1 in nums1:
            for n2 in nums2:
                if n1 + n2 in hashmap:
                    hashmap[n1 + n2] += 1
                else:
                    hashmap[n1 + n2] = 1
        count = 0
        for n3 in nums3:
            for n4 in nums4:
                key = -n3 - n4
                if key in hashmap:
                    count += hashmap[key]
        return count
                

● 383. 赎金信 
class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        ransom_count = [0]*26
        magazine_count = [0]*26
        for c in ransomNote:
            ransom_count[ord(c) - ord('a')]+= 1
        for c in magazine:
            magazine_count[ord(c) - ord('a')]+= 1
        return all(ransom_count[i] <= magazine_count[i] for i in range(26))

● 15. 三数之和 
class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        res = []
        for i in range(len(nums)):
            if nums[0] > 0:
                return res
            if nums[len(nums)-1] < 0:
                return res
            if i > 0 and nums[i] == nums[i - 1]:
                continue
            le = i + 1
            ri = len(nums) - 1
            while le < ri:
                sums = nums[i] + nums[le] + nums[ri]
                if sums < 0:
                    le += 1
                elif sums > 0:
                    ri -= 1
                else:
                    res.append([nums[i], nums[le], nums[ri]])
                    while le < ri and nums[le] == nums [le + 1]:
                        le += 1
                    while le < ri and nums[ri] == nums[ri - 1]:
                        ri -= 1
                    le += 1
                    ri -= 1
        return res

                 
                
● 18. 四数之和 
class Solution:
    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:
        nums.sort()
        n = len(nums)
        result = []
        for i in range(n):
            if nums[i] > target and nums[i] > 0 and target > 0:
                break
            if i > 0 and nums[i] == nums[i - 1]:
                continue
            for j in range(i+1, n):
                if j > i + 1 and nums[j] == nums[j - 1]:
                    continue
                le, ri = j + 1, n - 1
                while le < ri:
                    s = nums[i] + nums[j] + nums[le] + nums[ri]
                    if s < target:
                        le += 1
                    elif s > target:
                        ri -= 1
                    else:
                        result.append([nums[i], nums[j], nums[le], nums[ri]])
                        while le < ri and nums[le] == nums[le + 1]:
                            le += 1
                        while le < ri and nums[ri] == nums[ri - 1]:
                            ri -= 1
                        le += 1
                        ri -= 1
        return result
